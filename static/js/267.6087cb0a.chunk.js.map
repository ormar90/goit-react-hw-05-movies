{"version":3,"file":"static/js/267.6087cb0a.chunk.js","mappings":"sPAyBA,EAvBkB,SAAC,GAAgB,IAAfA,EAAc,EAAdA,SAClB,GAIIC,EAAAA,EAAAA,IAAQ,CACVC,cAAe,CACbC,MAAO,MALTC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MAQF,OACE,+BACE,kBAAMN,SAAUK,EAAaL,EAAUM,GAAvC,WACE,4BAAWF,EAAS,YACpB,mBAAQG,KAAK,SAASC,QAASF,EAA/B,wBAKP,E,mCC8BD,EA5Ce,WAAO,IAAD,EACXG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAK,UAAGF,EAAYG,IAAI,iBAAnB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVF,EAAJ,CAGA,IAAMG,EAAW,mCAAG,gHAEUC,EAAAA,EAAAA,IAAaJ,GAFvB,gBAERK,EAFQ,EAERA,QACRT,EAAUS,GAHM,gDAKhBC,QAAQC,IAAI,KAAMC,SALF,yDAAH,qDAQjBL,GATC,CAUF,GAAE,CAACH,EAAOF,IAOX,OACE,iCACIN,IAAW,SAAC,EAAD,CAAWT,SAPX,SAAA0B,GACfH,QAAQC,IAAIE,GACZV,EAA2B,KAAZU,EAAEvB,MAAe,CAAEwB,OAAQD,EAAEvB,OAAU,CAAC,EACxD,IAKIS,EAAOgB,OAAS,GAAKX,IACpB,wBACGL,EAAOiB,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,yBACE,SAAC,KAAD,CAASC,GAAE,UAAKF,GAAhB,SAAuBC,KADhBD,EAIZ,QAKV,C,8LCjDKG,EAAW,gCACXC,EAAU,mCAEVC,EAAW,mCAAG,sGACKC,EAAAA,GAAAA,IAAA,UAClBH,EADkB,sCACoBC,EADpB,YADL,uBACVG,EADU,EACVA,KADU,kBAIXA,GAJW,2CAAH,qDAOXhB,EAAY,mCAAG,WAAMJ,GAAN,yFACImB,EAAAA,GAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,iCAC8CjB,EAD9C,gCADJ,uBACXoB,EADW,EACXA,KADW,kBAIZA,GAJY,2CAAH,sDAOZC,EAAe,mCAAG,WAAMR,GAAN,yFACCM,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDH,EADC,oBACaI,EADb,oBADD,uBACdG,EADc,EACdA,KADc,kBAIfA,GAJe,2CAAH,sDAMfE,EAAe,mCAAG,WAAMT,GAAN,yFACCM,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDH,EADC,4BACqBI,EADrB,oBADD,uBACdG,EADc,EACdA,KADc,kBAIfA,GAJe,2CAAH,sDAOfG,EAAe,mCAAG,WAAMV,GAAN,yFACCM,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDH,EADC,6BACsBI,EADtB,oBADD,uBACdG,EADc,EACdA,KADc,kBAIfA,GAJe,2CAAH,qD","sources":["components/SearchBox.jsx","pages/Movies.jsx","services/API.js"],"sourcesContent":["import { useForm } from \"react-hook-form\";\n\nconst SearchBox = ({onSubmit}) => {\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm({\n    defaultValues: {\n      movie: '',\n    }\n  });\n  \n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit, reset)}>\n        <input {...register('movie')} />\n        <button type=\"submit\" onClick={reset}>Search</button>\n      </form>\n      \n    </>\n  );\n};\n\nexport default SearchBox;","import SearchBox from 'components/SearchBox';\nimport { useParams, NavLink, useSearchParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport { searchMovies } from 'services/API';\nimport { useEffect } from 'react';\n\n\n\n\nconst Movies = () => {\n  const { movieId } = useParams();\n  const [movies, setMovies] = useState([]);\n  const [searchParam, setSearchParam] = useSearchParams(); \n  const query = searchParam.get('search') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        const { results } = await searchMovies(query);\n        setMovies(results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchMovies();\n  }, [query, searchParam]);\n\n  const onSubmit = e => {\n    console.log(e);\n    setSearchParam(e.movie !== '' ? { search: e.movie } : {});\n  };  \n\n  return (\n    <>\n      {!movieId && <SearchBox onSubmit={onSubmit} />}\n      {movies.length > 0 && query && (\n        <ul>\n          {movies.map(({ id, title }) => {\n            return (\n              <li key={id}>\n                <NavLink to={`${id}`}>{title}</NavLink>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '248eab561af730ae2789760eff8bc947';\n\nconst getTrending = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\n\nconst searchMovies = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nconst getMovieDetails = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nconst getMovieCredits = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getMovieRewievs = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}//reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport {\n  getTrending,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieRewievs,\n};\n"],"names":["onSubmit","useForm","defaultValues","movie","register","handleSubmit","reset","type","onClick","movieId","useParams","useState","movies","setMovies","useSearchParams","searchParam","setSearchParam","query","get","useEffect","fetchMovies","searchMovies","results","console","log","message","e","search","length","map","id","title","to","BASE_URL","API_KEY","getTrending","axios","data","getMovieDetails","getMovieCredits","getMovieRewievs"],"sourceRoot":""}